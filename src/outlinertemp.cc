///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
//
//      CCC    AAA   V     V EEEEE       OOO   UU   UU TTTTTT LL    II NN   NN EEEEE RRRRR
//    CC   CC AA  AA  V   V  EE        OO   OO UU   UU   TT   LL    II NNN  NN EE    RR  RR
//    CC      AA  AA  V   V  EEE       OO   OO UU   UU   TT   LL    II NN N NN EEE   RRRRR
//    CC   CC AAAAAA   V V   EE        OO   OO UU   UU   TT   LL    II NN  NNN EE    RR R
//      CCc   AA  AA    V    EEEEE       OOO    UUUUU    TT   LLLLL II NN   NN EEEEE RR  R
//
//    CAVE OUTLINER -- Cave 3D model processing software
//
//    Copyright (C) 2021 by Jari Arkko -- See LICENSE.txt for license information.
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////
// Includes ///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

#include <stdlib.h>
#include <cassert>
#include "outlinertypes.hh"
#include "outlinerconstants.hh"
#include "outlinertemp.hh"
#include "outlinerdebug.hh"

///////////////////////////////////////////////////////////////////////////////////////////////
// Constructors ///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

TempFiler::TempFiler() :
  tempFileCounter(0) {
}

TempFiler::~TempFiler() {
}

char*
TempFiler::createTempFile(const char* base,
			  const char* extension) {
  const unsigned int counterLength = 12; // uint32_t is up to 4 billion, i.e., 10 chars
  size_t len = strlen(OUTLINER_TEMPDIRECTORY) + strlen(OUTLINER_TEMPIDENTIFIER) + 1 + counterLength + 1 + strlen(base) + 1 + strlen(extension) + 1;
  char* result = (char*)malloc(len);
  if (result == 0) {
    fatalf("Cannot allocate file name of %u bytes", len);
    return(0);
  }
  memset(result,0,len);
  snprintf(result,len,"%s%s-%u-%s.%s",
	   OUTLINER_TEMPDIRECTORY,
	   OUTLINER_TEMPIDENTIFIER,
	   tempFileCounter++,
	   base,
	   extension);
  return(result);
}
